{"version":3,"sources":["modules/notification/useNotifications.js","utils/form.js","routes/Signup/components/SignupForm/SignupForm.jsx","routes/Signup/components/SignupForm/SignupForm.styles.js","routes/Signup/components/SignupForm/index.js","routes/Signup/components/SignupPage/SignupPage.jsx","routes/Signup/components/SignupPage/SignupPage.styles.js","routes/Signup/components/SignupPage/SignupPage.enhancer.js","routes/Signup/components/SignupPage/index.js","routes/Verification/components/VerificationPage/VerificationPage.jsx","routes/Verification/components/VerificationPage/VerificationPage.styles.js","routes/Verification/components/VerificationPage/VerificationPage.enhancer.js","routes/Verification/components/VerificationPage/index.js"],"names":["useNotifications","useContext","NotificationsContext","validateEmail","value","test","undefined","useStyles","makeStyles","theme","root","flexColumnCenter","justifyContent","flexGrow","height","width","margin","fontSize","submit","textAlign","padding","minWidth","marginTop","SignupForm","onSubmit","classes","useForm","mode","nativeValidation","register","handleSubmit","formState","isSubmitting","isValid","errors","control","className","TextField","placeholder","autoComplete","fullWidth","inputProps","type","required","validate","error","email","helperText","password","FormControl","component","FormLabel","rules","defaultValue","CUSTOMER","name","render","onBlur","onChange","RadioGroup","FormControlLabel","Radio","color","label","MARKETER","Button","variant","disabled","fontWeight","paddingTop","panel","minHeight","orLabel","marginBottom","login","loginLabel","loginLink","providers","SignupPage","showError","firebase","useFirebase","firestore","useFirestore","params","URLSearchParams","useLocation","search","db","useState","referrer","setReferrer","useEffect","get","referrerID","documentRefString","collection","doc","userRef","path","updateReferrer","user","a","userToSave","createdAt","update","level1","FieldValue","arrayUnion","then","first","data","level2","second","level3","Paper","creds","createUser","displayName","username","role","wallet","Timestamp","now","catch","err","message","onSubmitFail","formErrs","dispatch","onClick","provider","additionalUserInfo","isNewUser","uid","to","LOGIN_PATH","UserIsNotAuthenticated","enhance","VerificationPage","isVerified","useSelector","auth","emailVerified","profile","showSuccess","USERS_PATH","LIST_PATH","Typography","Link","currentUser","sendEmailVerification","UserIsAuthenticated"],"mappings":"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","file":"static/js/Signup.ba25a494.chunk.js","sourcesContent":["import { useContext } from 'react'\nimport { NotificationsContext } from './NotificationsProvider'\n\n/**\n * Hook for loading notifications context\n * @returns {Object} Notifications context\n * @example\n * import React from 'react'\n * import { useNotifications } from 'modules/notification'\n *\n * function SomeComponent() {\n *   const { showError } = useNotifications()\n *   return (\n *     <button onClick={() => showError('Test Error')}>\n *       Test Error Notification\n *     </button>\n *   )\n * }\n */\nexport default function useNotifications() {\n  return useContext(NotificationsContext)\n}\n","/**\n * Returns error message if value is not a valid email, otherwise returns\n * undefined\n * @param {string} value - Email to validate\n * @returns {string|undefined} Required string if value is undefined\n * @example <caption>Basic</caption>\n * <Field\n *   name=\"email\"\n *   component={TextField}\n *   label=\"Email\"\n *   validate={validateEmail}\n * />\n */\nexport function validateEmail(value) {\n  return value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\n    ? 'Invalid email address'\n    : undefined\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Controller, useForm } from 'react-hook-form';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { validateEmail } from 'utils/form';\nimport styles from './SignupForm.styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport { CUSTOMER, MARKETER } from 'constants/roles';\n\nconst useStyles = makeStyles(styles);\n\nfunction SignupForm({ onSubmit }) {\n\tconst classes = useStyles();\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { isSubmitting, isValid, errors },\n\t\tcontrol,\n\t} = useForm({\n\t\tmode: 'onChange',\n\t\tnativeValidation: false,\n\t});\n\n\treturn (\n\t\t<form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\n\t\t\t<TextField\n\t\t\t\tplaceholder='Логин'\n\t\t\t\tautoComplete='username'\n\t\t\t\tmargin='normal'\n\t\t\t\tfullWidth\n\t\t\t\tinputProps={{\n\t\t\t\t\t...register('username'),\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\ttype='email'\n\t\t\t\tplaceholder='email'\n\t\t\t\tautoComplete='email'\n\t\t\t\tmargin='normal'\n\t\t\t\tfullWidth\n\t\t\t\tinputProps={{\n\t\t\t\t\t...register('email', {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\tvalidate: validateEmail,\n\t\t\t\t\t}),\n\t\t\t\t}}\n\t\t\t\terror={!!errors.email}\n\t\t\t\thelperText={errors.email && 'Введите правильный E-mail'}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\ttype='password'\n\t\t\t\tplaceholder='Пароль'\n\t\t\t\tautoComplete='current-password'\n\t\t\t\tmargin='normal'\n\t\t\t\tfullWidth\n\t\t\t\tinputProps={{\n\t\t\t\t\t...register('password', {\n\t\t\t\t\t\trequired: true,\n\t\t\t\t\t}),\n\t\t\t\t}}\n\t\t\t\terror={!!errors.password}\n\t\t\t\thelperText={errors.password && 'Нобходим пароль'}\n\t\t\t/>\n\t\t\t<FormControl component='fieldset' fullWidth>\n\t\t\t\t<FormLabel component='legend'>Тип учетной записи</FormLabel>\n\t\t\t\t<Controller\n\t\t\t\t\trules={{ required: true }}\n\t\t\t\t\tcontrol={control}\n\t\t\t\t\tdefaultValue={CUSTOMER}\n\t\t\t\t\tname='role'\n\t\t\t\t\trender={({ name, onBlur, onChange, value }) => (\n\t\t\t\t\t\t<RadioGroup name={name} defaultValue={CUSTOMER}>\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tvalue={CUSTOMER}\n\t\t\t\t\t\t\t\tcontrol={<Radio color='primary' />}\n\t\t\t\t\t\t\t\tlabel='Инвестор'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\tvalue={MARKETER}\n\t\t\t\t\t\t\t\tcontrol={<Radio color='primary' />}\n\t\t\t\t\t\t\t\tlabel='Маркетолог'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</FormControl>\n\t\t\t<div className={classes.submit}>\n\t\t\t\t<Button\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\ttype='submit'\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tdisabled={isSubmitting || !isValid}\n\t\t\t\t>\n\t\t\t\t\t{isSubmitting ? 'Загрухка' : 'Регистрация'}\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</form>\n\t);\n}\n\nSignupForm.propTypes = {\n\tonSubmit: PropTypes.func.isRequired,\n};\n\nexport default SignupForm;\n","export default (theme) => ({\n  root: {\n    ...theme.flexColumnCenter,\n    justifyContent: 'flex-start',\n    flexGrow: 1,\n    height: '100%',\n    width: '100%',\n    margin: '.2rem',\n    fontSize: '1.4rem'\n  },\n  submit: {\n    ...theme.flexColumnCenter,\n    justifyContent: 'center',\n    flexGrow: 1,\n    textAlign: 'center',\n    padding: '1.25rem',\n    minWidth: '192px',\n    marginTop: '1.5rem'\n  }\n})\n","import SignupForm from './SignupForm'\n\nexport default SignupForm\n","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport GoogleButton from 'react-google-button';\nimport Paper from '@material-ui/core/Paper';\nimport { useFirebase, useFirestore } from 'react-redux-firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { LOGIN_PATH } from 'constants/paths';\nimport { useNotifications } from 'modules/notification';\nimport SignupForm from '../SignupForm';\nimport styles from './SignupPage.styles';\nimport { CUSTOMER } from 'constants/roles';\n\nconst useStyles = makeStyles(styles);\n\nfunction SignupPage() {\n\tconst classes = useStyles();\n\tconst { showError } = useNotifications();\n\tconst firebase = useFirebase();\n\tconst firestore = useFirestore();\n\tconst params = new URLSearchParams(useLocation().search);\n\tconst db = firebase.firestore();\n\n\tconst [referrer, setReferrer] = useState('');\n\n\tuseEffect(() => {\n\t\tif (params.get('referral')) {\n\t\t\tconst referrerID = params.get('referral');\n\t\t\tconst documentRefString = db.collection('users').doc(referrerID);\n\t\t\tconst userRef = db.doc(documentRefString.path);\n\t\t\tsetReferrer(userRef);\n\t\t}\n\t}, []);\n\n\tfunction onSubmitFail(formErrs, dispatch, err) {\n\t\tshowError(formErrs ? 'Form Invalid' : err.message || 'Error');\n\t}\n\n\tconst updateReferrer = async (user) => {\n\t\tconst userToSave = { createdAt: user.createdAt, email: user.email };\n\t\tif (user?.referrer !== null) {\n\t\t\tawait user?.referrer?.update({\n\t\t\t\tlevel1: firestore.FieldValue.arrayUnion(userToSave),\n\t\t\t});\n\n\t\t\tfirestore\n\t\t\t\t.collection('users')\n\t\t\t\t.doc(params.get('referral'))\n\t\t\t\t.get()\n\t\t\t\t.then(async (doc) => {\n\t\t\t\t\tconst first = doc.data();\n\n\t\t\t\t\tif (first?.referrer !== null) {\n\t\t\t\t\t\tawait first?.referrer?.update({\n\t\t\t\t\t\t\tlevel2: firestore.FieldValue.arrayUnion(userToSave),\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tfirst.referrer.get().then(async (doc) => {\n\t\t\t\t\t\t\tconst second = doc.data();\n\n\t\t\t\t\t\t\tif (second?.referrer !== null) {\n\t\t\t\t\t\t\t\tawait second?.referrer?.update({\n\t\t\t\t\t\t\t\t\tlevel3: firestore.FieldValue.arrayUnion(userToSave),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t};\n\n\tfunction googleLogin() {\n\t\treturn firebase\n\t\t\t.login({ provider: 'google', type: 'popup' })\n\t\t\t.then(async (user) => {\n\t\t\t\tif (user.additionalUserInfo.isNewUser) {\n\t\t\t\t\tawait firestore\n\t\t\t\t\t\t.collection('users')\n\t\t\t\t\t\t.doc(user.user.uid)\n\t\t\t\t\t\t.update({\n\t\t\t\t\t\t\trole: CUSTOMER,\n\t\t\t\t\t\t\twallet: 0,\n\t\t\t\t\t\t\tlevel1: [],\n\t\t\t\t\t\t\tlevel2: [],\n\t\t\t\t\t\t\tlevel3: [],\n\t\t\t\t\t\t\treferrer: referrer ? referrer : null,\n\t\t\t\t\t\t\tcreatedAt: firestore.Timestamp.now(),\n\t\t\t\t\t\t});\n\n\t\t\t\t\tfirestore\n\t\t\t\t\t\t.collection('users')\n\t\t\t\t\t\t.doc(user.user.uid)\n\t\t\t\t\t\t.get()\n\t\t\t\t\t\t.then(async (doc) => {\n\t\t\t\t\t\t\tconst user = doc.data();\n\t\t\t\t\t\t\tupdateReferrer(user);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => showError(err.message));\n\t}\n\n\tfunction emailSignup(creds) {\n\t\treturn firebase\n\t\t\t.createUser(creds, {\n\t\t\t\temail: creds.email,\n\t\t\t\tdisplayName: creds.username,\n\t\t\t\trole: creds.role,\n\t\t\t\twallet: 0,\n\t\t\t\tlevel1: [],\n\t\t\t\tlevel2: [],\n\t\t\t\tlevel3: [],\n\t\t\t\treferrer: referrer ? referrer : null,\n\t\t\t\tcreatedAt: firestore.Timestamp.now(),\n\t\t\t})\n\t\t\t.then(updateReferrer)\n\t\t\t.catch((err) => {\n\t\t\t\treturn showError(err.message);\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<Paper className={classes.panel}>\n\t\t\t\t<SignupForm onSubmit={emailSignup} onSubmitFail={onSubmitFail} />\n\t\t\t</Paper>\n\t\t\t<div className={classes.orLabel}>или</div>\n\t\t\t<div className={classes.providers}>\n\t\t\t\t<GoogleButton onClick={googleLogin} data-test='google-auth-button' />\n\t\t\t</div>\n\t\t\t<div className={classes.login}>\n\t\t\t\t<span className={classes.loginLabel}>У вас уже есть аккаунт?</span>\n\t\t\t\t<Link className={classes.loginLink} to={LOGIN_PATH}>\n\t\t\t\t\tAвторизоваться\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default SignupPage;\n","export default (theme) => ({\n  root: {\n    ...theme.flexColumnCenter,\n    justifyContent: 'flex-start',\n    height: '100%',\n    width: '100%',\n    fontWeight: 400,\n    paddingTop: '1.5rem'\n  },\n  panel: {\n    ...theme.flexColumnCenter,\n    justifyContent: 'center',\n    flexGrow: 1,\n    padding: '1.25rem',\n    minWidth: '250px',\n    minHeight: '270px'\n  },\n  orLabel: {\n    marginTop: '1rem',\n    marginBottom: '.5rem'\n  },\n  login: {\n    ...theme.flexColumnCenter,\n    justifyContent: 'center',\n    marginTop: '1.5rem'\n  },\n  loginLabel: {\n    fontSize: '1rem',\n    fontWeight: 'bold'\n  },\n  loginLink: {\n    fontSize: '1.2rem'\n  },\n  providers: {\n    marginTop: '1rem'\n  }\n})\n","import { UserIsNotAuthenticated } from 'utils/router'\n\n// Redirect to list page if logged in\nexport default UserIsNotAuthenticated\n","import SignupPage from './SignupPage'\nimport enhance from './SignupPage.enhancer'\n\nexport default enhance(SignupPage)\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport { useFirebase } from 'react-redux-firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from './VerificationPage.styles';\nimport { Button, Typography } from '@material-ui/core';\nimport { LIST_PATH, USERS_PATH } from 'constants/paths';\nimport { useSelector } from 'react-redux';\nimport { useNotifications } from 'modules/notification';\n\nconst useStyles = makeStyles(styles);\n\nfunction VerificationPage() {\n\tconst classes = useStyles();\n\tconst firebase = useFirebase();\n\tconst isVerified = useSelector(({ firebase }) => firebase.auth.emailVerified)\n\tconst profile = useSelector(({ firebase: { profile } }) => profile)\n\tconst { showSuccess } = useNotifications()\n\n\tconst verifyEmail = () => {\n\t\tfirebase.auth().currentUser.sendEmailVerification()\n\t\tshowSuccess('Письмо верификации было отправлено на ваш E-mail')\n\t}\n\n\treturn (profile.role === \"admin\"\n\t\t? <Redirect to={USERS_PATH} />\n\t\t: isVerified\n\t\t\t? <Redirect to={LIST_PATH} />\n\t\t\t: (\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<Paper className={classes.panel}>\n\t\t\t\t\t\t<Typography variant='h6' component='p' >\n\t\t\t\t\t\t\tПожалуйста подтвердите ваш E-mail.\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcomponent={Link}\n\t\t\t\t\t\t\tonClick={verifyEmail}\n\t\t\t\t\t\t\tdata-test='sign-in'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tОтправить письмо верификации\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Paper>\n\t\t\t\t</div>\n\t\t\t))\n}\n\nexport default VerificationPage;\n","export default (theme) => ({\n  root: {\n    ...theme.flexColumnCenter,\n    justifyContent: 'flex-start',\n    height: '100%',\n    width: '100%',\n    fontWeight: 400,\n    paddingTop: '1.5rem'\n  },\n  panel: {\n    ...theme.flexColumnCenter,\n    justifyContent: 'center',\n    flexGrow: 1,\n    padding: '2rem',\n    minWidth: '250px',\n    // minHeight: '270px'\n  },\n  orLabel: {\n    marginTop: '1rem',\n    marginBottom: '.5rem'\n  },\n  login: {\n    ...theme.flexColumnCenter,\n    justifyContent: 'center',\n    marginTop: '1.5rem'\n  },\n  loginLabel: {\n    fontSize: '1rem',\n    fontWeight: 'bold'\n  },\n  loginLink: {\n    fontSize: '1.2rem'\n  },\n  providers: {\n    marginTop: '1rem'\n  }\n})\n","import { UserIsAuthenticated } from 'utils/router'\n\n// Redirect to list page if logged in\nexport default UserIsAuthenticated\n","import VerificationPage from './VerificationPage'\nimport enhance from './VerificationPage.enhancer'\n\nexport default enhance(VerificationPage)\n"],"sourceRoot":""}